---

- name: Install prerequisites packages
  apt:
    pkg: "{{ item }}"
    state: present
    update_cache: yes
    cache_valid_time: 3600
  with_items:
    - wget
    - curl
    - unzip
    - python-setuptools
    - python-dev

- name: Add Mesosphere key on remote server
  apt_key:
    id: E56151BF
    keyserver: keyserver.ubuntu.com
    state: present

- name: Add Mesosphere repository on remote server
  apt_repository:
    repo: deb {{ mesosphere_apt_url }} {{ ansible_distribution_release | lower }} main
    state: present
    update_cache: yes

- name: Install Mesos on remote server
  apt:
    name: mesos
    update_cache: yes
    state: present

- name: Create Mesos work directory
  file:
    path: "{{ mesos_work_dir }}"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Remove Default Mesos Configs
  file:
    state: absent
    path: /etc/mesos/

- name: Remove Default Mesos-Master Config
  file:
    state: absent
    path: /etc/mesos-master/

- name: Remove Default Mesos-Slave Config
  file:
    state: absent
    path: /etc/mesos-slave/

- name: Configure Mesos on remote system
  template:
    src: "{{ item }}.j2"
    dest: "/{{ item }}"
    owner: root
    group: root
    mode: 0664
  with_items:
    - "etc/default/mesos"
    - "etc/default/mesos-master"
    - "etc/default/mesos-slave"
  notify:
    - Restart mesos-master
    - Restart mesos-slave
  tags: config

- name: Configure Mesos Master systemd service
  template:
    src: "{{ item }}.j2"
    dest: "/{{ item }}"
    owner: root
    group: root
    mode: 0664
  with_items:
    - "lib/systemd/system/mesos-master.service"
  when: inventory_hostname in groups['master']
  notify:
    - Restart mesos-master

- name: Configure Mesos Slave systemd service
  template:
    src: "{{ item }}.j2"
    dest: "/{{ item }}"
    owner: root
    group: root
    mode: 0664
  with_items:
    - "lib/systemd/system/mesos-slave.service"
  when: inventory_hostname in groups['slave']
  notify: Restart mesos-slave
